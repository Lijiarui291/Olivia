#include<iostream>
using namespace std;
int a[9][9],n;
int try1(int ixc,int jxc,int kxc)
{
	int pi,pii,pij,pim;
	int l,m,s,s11,s12,s21,s22;
	double past_n=0,process,all;
	int nbf=n,abf[9][9],b[9][9][9]={0},suma[9][9]={0};
	for(int i=0;i<9;i++)
		for(int j=0;j<9;j++)
			abf[i][j]=a[i][j];
	a[ixc][jxc]=kxc+1;
	n--;
	cout<<"试填中请稍后…………"<<endl;
	all=n;
	while(n>0)
	{
		past_n=n;
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]!=0)
				{
					for(int k=0;k<9;k++)
					{
						b[i][j][k]=1;
						b[i][k][a[i][j]-1]=1;
						b[k][j][a[i][j]-1]=1;
					}
					l=i/3;
					m=j/3;
					for(int ii=0;ii<3;ii++)
						for(int jj=0;jj<3;jj++)
							b[l*3+ii][m*3+jj][a[i][j]-1]=1;
				}
				else
				{
					pi=1;
					for(int k=0;k<9;k++)
						pi*=b[i][j][k];
					if(pi==1)
					{
						n=nbf;
						for(int i=0;i<9;i++)
							for(int j=0;j<9;j++)
								a[i][j]=abf[i][j];
						cout<<"退出一次试填"<<endl;
						return 0;
					}
				}
				suma[i][j]=0;
				for(int k=0;k<9;k++)
					suma[i][j]+=b[i][j][k];
			}
		}
		for(int k=0;k<9;k++)
		{
			for(int i=0;i<9;i++)
			{
				for(int j=0;j<9;j++)
				{
					for(int ii=0;ii<9;ii++)
					{
						for(int jj=0;jj<9;jj++)
						{
							if(i!=ii&&j!=jj&&b[i][j][k]==0&&b[i][jj][k]==0&&b[ii][j][k]==0&&b[ii][jj][k]==0)
							{
								s11=s12=s21=s22=0;
								for(int o=0;o<9;o++)
								{
									s11+=b[i][o][k];
									s21+=b[ii][o][k];
									s12+=b[o][j][k];
									s22+=b[o][jj][k];
								}
								if(s11==7&&s21==7)
								{
									for(int o=0;o<9;o++)
									{
										if(o!=i&&o!=ii)
										{
											b[o][j][k]=1;
											b[o][jj][k]=1;
										}
									}
								}
								if(s12==7&&s22==7)
								{
									for(int o=0;o<9;o++)
									{
										if(o!=j&&o!=jj)
										{
											b[i][o][k]=1;
											b[ii][o][k]=1;
										}
									}
								}
							}
							if(i!=ii&&j!=jj&&suma[i][j]==7&&suma[i][jj]==7&&suma[ii][j]==7)
							{
								for(int k1=0;k1<9;k1++)
									for(int k2=0;k2<9;k2++)
										if(k!=k1&&k!=k2&&k1!=k2&&b[i][j][k1]==0&&b[i][j][k2]==0&&b[ii][j][k1]==0&&b[ii][j][k]==0&&b[i][jj][k2]==0&&b[i][jj][k]==0)
											b[ii][jj][k]=1;
							}
						}
					}
				}
			}
		}
		for(int k=0;k<9;k++)
		{
			for(int l=0;l<3;l++)
			{
				for(int ll1=0;ll1<3;ll1++)
				{
					for(int ll2=0;ll2<3;ll2++)
					{
						for(int m=0;m<3;m++)
						{
							for(int mm=0;mm<3;mm++)
							{
								for(int m1=0;m<3;m++)
								{
									for(int m2=0;m<3;m++)
									{
										for(int m3=0;m<3;m++)
										{
											for(int m4=0;m<3;m++)
											{
												if(ll1!=ll2&&m!=mm&&b[l*3+ll1][m*3+m1][k]==0&&b[l*3+ll1][mm*3+m2][k]==0&&b[l*3+ll2][m*3+m3][k]==0&&b[l*3+ll2][mm*3+m4][k]==0)
												{
													s11=s12=s21=s22=0;
													for(int o=0;o<9;o++)
													{	
														s11+=b[l*3+ll1][o][k];
														s21+=b[l*3+ll2][o][k];
													}
													for(int o=0;o<3;o++)
														for(int p=0;p<3;p++)
														{
															s12+=b[l*3+o][m*3+p][k];
															s22+=b[l*3+o][mm*3+p][k];
														}
													if(s12==7&&s22==7)
													{
														for(int o=0;o<9;o++)
														{
															if(o!=m*3+m1&&o!=mm*3+m2)
																b[l*3+ll1][o][k]=1;
															if(o!=m*3+m3&&o!=mm*3+m4)
																b[l*3+ll2][o][k]=1;
														}
													}
													if(s11==7&&s21==7)
													{
														for(int o=0;o<3;o++)
															for(int p=0;p<3;p++)
															{
																if((o!=ll1||p!=m1)&&(o!=ll2||p!=m3))
																	b[l*3+o][m*3+p][k]=1;
																if((o!=ll1||p!=m2)&&(o!=ll2||p!=m4))
																	b[l*3+o][mm*3+p][k]=1;
															}
													}
												}
												if(ll1!=ll2&&m!=mm&&b[m*3+m1][l*3+ll1][k]==0&&b[mm*3+m2][l*3+ll1][k]==0&&b[m*3+m3][l*3+ll2][k]==0&&b[mm*3+m4][l*3+ll2][k]==0)
												{
													s11=s12=s21=s22=0;
													for(int o=0;o<9;o++)
													{	
														s11+=b[o][l*3+ll1][k];
														s21+=b[o][l*3+ll2][k];
													}
													for(int o=0;o<3;o++)
														for(int p=0;p<3;p++)
														{
															s12+=b[m*3+p][l*3+o][k];
															s22+=b[mm*3+p][l*3+o][k];
														}
													if(s12==7&&s22==7)
													{
														for(int o=0;o<9;o++)
														{
															if(o!=m*3+m1&&o!=mm*3+m2)
																b[o][l*3+ll1][k]=1;
															if(o!=m*3+m3&&o!=mm*3+m4)
																b[o][l*3+ll2][k]=1;
														}
													}
													if(s11==7&&s21==7)
													{
														for(int o=0;o<3;o++)
															for(int p=0;p<3;p++)
															{
																if((o!=ll1||p!=m1)&&(o!=ll2||p!=m3))
																	b[m*3+p][l*3+o][k]=1;
																if((o!=ll1||p!=m2)&&(o!=ll2||p!=m4))
																	b[mm*3+p][l*3+o][k]=1;
															}
													}
												}
												if(ll1!=ll2&&m!=mm&&suma[l*3+ll1][m*3+m1]==7&&suma[l*3+ll1][mm*3+m2]==7&&suma[l*3+ll2][m*3+m3]==7)
													for(int k1=0;k1<9;k1++)
														for(int k2=0;k2<9;k2++)
															if(k!=k1&&k!=k2&&k1!=k2&&b[l*3+ll1][m*3+m1][k1]==0&&b[l*3+ll1][m*3+m1][k2]==0&&b[l*3+ll1][mm*3+m2][k1]==0&&b[l*3+ll1][mm*3+m2][k]==0&&b[l*3+ll2][m*3+m3][k2]==0&&b[l*3+ll2][m*3+m3][k]==0)
																for(int o=0;o<3;o++)
																	b[l*3+ll2][mm*3+o][k]=1;
												if(ll1!=ll2&&m!=mm&&suma[m*3+m1][l*3+ll1]==7&&suma[mm*3+m2][l*3+ll1]==7&&suma[m*3+m3][l*3+ll2]==7)
													for(int k1=0;k1<9;k1++)
														for(int k2=0;k2<9;k2++)
															if(k!=k1&&k!=k2&&k1!=k2&&b[m*3+m1][l*3+ll1][k1]==0&&b[m*3+m1][l*3+ll1][k2]==0&&b[mm*3+m2][l*3+ll1][k1]==0&&b[mm*3+m2][l*3+ll1][k]==0&&b[m*3+m3][l*3+ll2][k2]==0&&b[m*3+m3][l*3+ll2][k]==0)
																for(int o=0;o<3;o++)
																	b[mm*3+o][l*3+ll2][k]=1;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]==0)
				{
					s = 0;
					for(int k=0;k<9;k++)
						s+=b[i][j][k];
					if(s==8)
						for(int k=0;k<9;k++)
							if(b[i][j][k]==0)
							{
								a[i][j]=k+1;
								n--;
								process=(1-n/all)*100;
								cout<<"进度"<<process<<"\%"<<endl;
								for(int o=0;o<9;o++)
								{
									b[i][j][o]=1;
									b[i][o][k]=1;
									b[o][j][k]=1;
								}
								l=i/3;
								m=j/3;
								for(int ii=0;ii<3;ii++)
									for(int jj=0;jj<3;jj++)
										b[l*3+ii][m*3+jj][k]=1;
							}
				}
			}
		}
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]==0)
				{
					for(int k=0;k<9;k++)
					{
						if(b[i][j][k]==0)
						{
							pii=pij=pim=1;
							for(int o=0;o<9;o++)
								if(o!=j)
									pii=pii*b[i][o][k];
							for(int o=0;o<9;o++)
								if(o!=i)
									pij=pij*b[o][j][k];
							l=i/3;
							m=j/3;
							for(int ii=0;ii<3;ii++)
								for(int jj=0;jj<3;jj++)
									if(l*3+ii!=i||m*3+jj!=j)
										pim=pim*b[l*3+ii][m*3+jj][k];
							if(pii==1||pij==1||pim==1)
							{
								a[i][j]=k+1;
								n--;
								process=(1-n/all)*100;
								cout<<"进度"<<process<<"\%"<<endl;
								for(int o=0;o<9;o++)
								{
									b[i][j][o]=1;
									b[i][o][k]=1;
									b[o][j][k]=1;
								}
								l=i/3;
								m=j/3;
								for(int ii=0;ii<3;ii++)
									for(int jj=0;jj<3;jj++)
										b[l*3+ii][m*3+jj][k]=1;
							}
						}
					}
				}
			}
		}
		if(past_n==n)
		{
			cout<<"无法用排除法解目前数独"<<endl;
			cout<<"目前结果为："<<endl;
			for(int i=0;i<9;i++)
			{
				for(int j=0;j<9;j++)
					cout<<' '<<a[i][j];
				cout<<endl;
			}
			int shut=0;
			for(int i=0;i<9&&shut==0;i++)
			{
				for(int j=0;j<9&&shut==0;j++)
				{
					s=0;
					for(int k=0;k<9;k++)
						s+=b[i][j][k];
					if(s==7)
					{
						for(int k=0;k<9;k++)
							if(b[i][j][k]==0)
							{
								if(try1(i,j,k)==1)
								{
									return 1;
								}
								else if(try1(i,j,k)==2)
									return 2;
								shut=1;
							}

					}
				}
			}
			if(shut==0)
				return 2;
			if(n>0)
			{
				n=nbf;
				for(int i=0;i<9;i++)
					for(int j=0;j<9;j++)
						a[i][j]=abf[i][j];
				cout<<"退出一次试填"<<endl;
				return 0;
			}
		}		
		if(n<0)
		{
			n=nbf;
			for(int i=0;i<9;i++)
				for(int j=0;j<9;j++)
					a[i][j]=abf[i][j];
			cout<<"退出一次试填"<<endl;
			return 0;
		}
	}		
	return 1;
}
int main()
{
	int cont,aline;
	int pi,pii,pij,pim;
	int l,m,s,s11,s12,s21,s22;
	double past_n=0,process,all;
	int b[9][9][9]={0},suma[9][9]={0};
	cout<<"解数独器"<<endl;
	cout<<"本小玩意儿由契拉制作"<<endl;
	for(int i=0;i<9;i++)
	{
		cout<<"请输入第"<<i+1<<"行的9个数字（不需要用空格隔开）然后回车（1-9，未知则填0）："<<endl;
		cin>>aline;
		for(int j=8;j>=0;j--)
		{
			a[i][j]=aline%10;
			if(a[i][j]==0)
				n++;
			aline/=10;
		}
	}
	cout<<"计算中请稍后…………"<<endl;
	all=n;
	while(n>0)
	{
		past_n=n;
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]!=0)
				{
					for(int k=0;k<9;k++)
					{
						b[i][j][k]=1;
						b[i][k][a[i][j]-1]=1;
						b[k][j][a[i][j]-1]=1;
					}
					l=i/3;
					m=j/3;
					for(int ii=0;ii<3;ii++)
						for(int jj=0;jj<3;jj++)
							b[l*3+ii][m*3+jj][a[i][j]-1]=1;
				}
				else
				{
					pi=1;
					for(int k=0;k<9;k++)
						pi*=b[i][j][k];
					if(pi==1)
					{
						cout<<"数独有误"<<endl;
						cout<<"输入1继续，或者输入0退出：";
						cin>>cont;
						if(cont)
							return main();
						else
							return 2;
					}
				}
				suma[i][j]=0;
				for(int k=0;k<9;k++)
					suma[i][j]+=b[i][j][k];
			}
		}
		for(int k=0;k<9;k++)
		{
			for(int i=0;i<9;i++)
			{
				for(int j=0;j<9;j++)
				{
					for(int ii=0;ii<9;ii++)
					{
						for(int jj=0;jj<9;jj++)
						{
							if(i!=ii&&j!=jj&&b[i][j][k]==0&&b[i][jj][k]==0&&b[ii][j][k]==0&&b[ii][jj][k]==0)
							{
								s11=s12=s21=s22=0;
								for(int o=0;o<9;o++)
								{
									s11+=b[i][o][k];
									s21+=b[ii][o][k];
									s12+=b[o][j][k];
									s22+=b[o][jj][k];
								}
								if(s11==7&&s21==7)
								{
									for(int o=0;o<9;o++)
									{
										if(o!=i&&o!=ii)
										{
											b[o][j][k]=1;
											b[o][jj][k]=1;
										}
									}
								}
								if(s12==7&&s22==7)
								{
									for(int o=0;o<9;o++)
									{
										if(o!=j&&o!=jj)
										{
											b[i][o][k]=1;
											b[ii][o][k]=1;
										}
									}
								}
							}
							if(i!=ii&&j!=jj&&suma[i][j]==7&&suma[i][jj]==7&&suma[ii][j]==7)
							{
								for(int k1=0;k1<9;k1++)
									for(int k2=0;k2<9;k2++)
										if(k!=k1&&k!=k2&&k1!=k2&&b[i][j][k1]==0&&b[i][j][k2]==0&&b[ii][j][k1]==0&&b[ii][j][k]==0&&b[i][jj][k2]==0&&b[i][jj][k]==0)
											b[ii][jj][k]=1;
							}
						}
					}
				}
			}
		}
		for(int k=0;k<9;k++)
		{
			for(int l=0;l<3;l++)
			{
				for(int ll1=0;ll1<3;ll1++)
				{
					for(int ll2=0;ll2<3;ll2++)
					{
						for(int m=0;m<3;m++)
						{
							for(int mm=0;mm<3;mm++)
							{
								for(int m1=0;m<3;m++)
								{
									for(int m2=0;m<3;m++)
									{
										for(int m3=0;m<3;m++)
										{
											for(int m4=0;m<3;m++)
											{
												if(ll1!=ll2&&m!=mm&&b[l*3+ll1][m*3+m1][k]==0&&b[l*3+ll1][mm*3+m2][k]==0&&b[l*3+ll2][m*3+m3][k]==0&&b[l*3+ll2][mm*3+m4][k]==0)
												{
													s11=s12=s21=s22=0;
													for(int o=0;o<9;o++)
													{	
														s11+=b[l*3+ll1][o][k];
														s21+=b[l*3+ll2][o][k];
													}
													for(int o=0;o<3;o++)
														for(int p=0;p<3;p++)
														{
															s12+=b[l*3+o][m*3+p][k];
															s22+=b[l*3+o][mm*3+p][k];
														}
													if(s12==7&&s22==7)
													{
														for(int o=0;o<9;o++)
														{
															if(o!=m*3+m1&&o!=mm*3+m2)
																b[l*3+ll1][o][k]=1;
															if(o!=m*3+m3&&o!=mm*3+m4)
																b[l*3+ll2][o][k]=1;
														}
													}
													if(s11==7&&s21==7)
													{
														for(int o=0;o<3;o++)
															for(int p=0;p<3;p++)
															{
																if((o!=ll1||p!=m1)&&(o!=ll2||p!=m3))
																	b[l*3+o][m*3+p][k]=1;
																if((o!=ll1||p!=m2)&&(o!=ll2||p!=m4))
																	b[l*3+o][mm*3+p][k]=1;
															}
													}
												}
												if(ll1!=ll2&&m!=mm&&b[m*3+m1][l*3+ll1][k]==0&&b[mm*3+m2][l*3+ll1][k]==0&&b[m*3+m3][l*3+ll2][k]==0&&b[mm*3+m4][l*3+ll2][k]==0)
												{
													s11=s12=s21=s22=0;
													for(int o=0;o<9;o++)
													{	
														s11+=b[o][l*3+ll1][k];
														s21+=b[o][l*3+ll2][k];
													}
													for(int o=0;o<3;o++)
														for(int p=0;p<3;p++)
														{
															s12+=b[m*3+p][l*3+o][k];
															s22+=b[mm*3+p][l*3+o][k];
														}
													if(s12==7&&s22==7)
													{
														for(int o=0;o<9;o++)
														{
															if(o!=m*3+m1&&o!=mm*3+m2)
																b[o][l*3+ll1][k]=1;
															if(o!=m*3+m3&&o!=mm*3+m4)
																b[o][l*3+ll2][k]=1;
														}
													}
													if(s11==7&&s21==7)
													{
														for(int o=0;o<3;o++)
															for(int p=0;p<3;p++)
															{
																if((o!=ll1||p!=m1)&&(o!=ll2||p!=m3))
																	b[m*3+p][l*3+o][k]=1;
																if((o!=ll1||p!=m2)&&(o!=ll2||p!=m4))
																	b[mm*3+p][l*3+o][k]=1;
															}
													}
												}
												if(ll1!=ll2&&m!=mm&&suma[l*3+ll1][m*3+m1]==7&&suma[l*3+ll1][mm*3+m2]==7&&suma[l*3+ll2][m*3+m3]==7)
													for(int k1=0;k1<9;k1++)
														for(int k2=0;k2<9;k2++)
															if(k!=k1&&k!=k2&&k1!=k2&&b[l*3+ll1][m*3+m1][k1]==0&&b[l*3+ll1][m*3+m1][k2]==0&&b[l*3+ll1][mm*3+m2][k1]==0&&b[l*3+ll1][mm*3+m2][k]==0&&b[l*3+ll2][m*3+m3][k2]==0&&b[l*3+ll2][m*3+m3][k]==0)
																for(int o=0;o<3;o++)
																	b[l*3+ll2][mm*3+o][k]=1;
												if(ll1!=ll2&&m!=mm&&suma[m*3+m1][l*3+ll1]==7&&suma[mm*3+m2][l*3+ll1]==7&&suma[m*3+m3][l*3+ll2]==7)
													for(int k1=0;k1<9;k1++)
														for(int k2=0;k2<9;k2++)
															if(k!=k1&&k!=k2&&k1!=k2&&b[m*3+m1][l*3+ll1][k1]==0&&b[m*3+m1][l*3+ll1][k2]==0&&b[mm*3+m2][l*3+ll1][k1]==0&&b[mm*3+m2][l*3+ll1][k]==0&&b[m*3+m3][l*3+ll2][k2]==0&&b[m*3+m3][l*3+ll2][k]==0)
																for(int o=0;o<3;o++)
																	b[mm*3+o][l*3+ll2][k]=1;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]==0)
				{
					s = 0;
					for(int k=0;k<9;k++)
						s+=b[i][j][k];
					if(s==8)
						for(int k=0;k<9;k++)
							if(b[i][j][k]==0)
							{
								a[i][j]=k+1;
								n--;
								process=(1-n/all)*100;
								cout<<"进度"<<process<<"\%"<<endl;
								for(int o=0;o<9;o++)
								{
									b[i][j][o]=1;
									b[i][o][k]=1;
									b[o][j][k]=1;
								}
								l=i/3;
								m=j/3;
								for(int ii=0;ii<3;ii++)
									for(int jj=0;jj<3;jj++)
										b[l*3+ii][m*3+jj][k]=1;
							}
				}
			}
		}
		for(int i=0;i<9;i++)
		{
			for(int j=0;j<9;j++)
			{
				if(a[i][j]==0)
				{
					for(int k=0;k<9;k++)
					{
						if(b[i][j][k]==0)
						{
							pii=pij=pim=1;
							for(int o=0;o<9;o++)
								if(o!=j)
									pii=pii*b[i][o][k];
							for(int o=0;o<9;o++)
								if(o!=i)
									pij=pij*b[o][j][k];
							l=i/3;
							m=j/3;
							for(int ii=0;ii<3;ii++)
								for(int jj=0;jj<3;jj++)
									if(l*3+ii!=i||m*3+jj!=j)
										pim=pim*b[l*3+ii][m*3+jj][k];
							if(pii==1||pij==1||pim==1)
							{
								a[i][j]=k+1;
								n--;
								process=(1-n/all)*100;
								cout<<"进度"<<process<<"\%"<<endl;
								for(int o=0;o<9;o++)
								{
									b[i][j][o]=1;
									b[i][o][k]=1;
									b[o][j][k]=1;
								}
								l=i/3;
								m=j/3;
								for(int ii=0;ii<3;ii++)
									for(int jj=0;jj<3;jj++)
										b[l*3+ii][m*3+jj][k]=1;
							}
						}
					}
				}
			}
		}
		if(past_n==n)
		{
			cout<<"无法用排除法解目前数独"<<endl;
			cout<<"目前结果为："<<endl;
			for(int i=0;i<9;i++)
			{
				for(int j=0;j<9;j++)
					cout<<' '<<a[i][j];
				cout<<endl;
			}
			int shut=0;
			for(int i=0;i<9&&shut==0;i++)
			{
				for(int j=0;j<9&&shut==0;j++)
				{
					s=0;
					for(int k=0;k<9;k++)
						s+=b[i][j][k];
					if(s==7)
					{
						for(int k=0;k<9;k++)
							if(b[i][j][k]==0)
							{
								if(try1(i,j,k)==1)
								{
									shut=1;
									break;
								}
								else if(try1(i,j,k)==2)
								{
									cout<<"此数独自由度太高，请试填一些后再使用该程序"<<endl;
									cout<<"输入1继续，或者输入0退出：";
									cin>>cont;
									if(cont)
										return main();
									else
										return 3;
								}
								shut=1;
							}

					}
				}
			}
			if(shut==0)
			{
				cout<<"此数独自由度太高，请试填一些后再使用该程序"<<endl;
				cout<<"输入1继续，或者输入0退出：";
				cin>>cont;
				if(cont)
					return main();
				else
					return 3;
			}		
			if(n>0)
			{
				cout<<"数独有误"<<endl;
				cout<<"输入1继续，或者输入0退出：";
				cin>>cont;
				if(cont)
					return main();
				else
					return 1;
			}
		}
		if(n<0)
		{
			cout<<"数独有误"<<endl;
			cout<<"输入1继续，或者输入0退出：";
			cin>>cont;
			if(cont)
				return main();
			else
				return 1;
		}
	}
	cout<<"最终结果为："<<endl;
	for(int i=0;i<9;i++)
	{
		for(int j=0;j<9;j++)
			cout<<' '<<a[i][j];
		cout<<endl;
	}
	cout<<"输入1继续，或者输入0退出：";
	cin>>cont;
	if(cont)
		return main();
	else
		return 0;
}
