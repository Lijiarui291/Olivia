//A: 判断直角三角形
//第1行是一个整数n，表示随后有n组数据
//每组数据占一行，包含3个整数代表3条边长(每个整数的平方能够用32位整数表示)，用空格分隔。
//每组输出占一行，如果是直角三角形输出Yes，不是则输出No。
/*#include <stdio.h>
int main(){
	int n, i;//表示随后有n组数据和已输入的组数
	scanf("%d", &n);
	int a, b, c;
	
	for(i = 0;i < n;i++){
		scanf("%d %d %d", &a, &b, &c);
		getchar();
	if(a+b>c && a-b<c || a+c>b && a-c<b || b+c>a && b-c<a){
	if(a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a){printf("Yes\n");} 
	else printf("No\n");}
	else printf("No\n");}   
	return 0;
}*/


//B: 求绝对值最大的数
//每行输入包含一个测试用例，第一个整数m(1<=m<=20)，表示随后有m个整数,各数之间用空格分隔。
//每组输出占一行，输出绝对值最大的数。
#include <stdio.h>
#include <math.h>
int main(){
	int m; 
	int i = 0;//表示数组脚标
	int j, t;//用于冒泡排序 
	scanf("%d", &m);
	int A[m];
	while (i < m){
	scanf("%d", &A[i]);
	i++;}
	for(i = 0;i < m;i++){//从第一个开始比较 
		for(j = i;j < m;j++){//第一次不会满足a[i]>a[j},因此进入j+1，再进行比较 
			if(A[i] > A[j]){//这个是把第一个（之后是第二个......）和后面的每一个进行比较再排序 
			int t = A[j];
			A[j] = A[i];
			A[i] = t;
			}
		}
	
	}
	if((A[0] >= 0 && A[m - 1] >= 0) || (A[0] <= 0 && A[m - 1] <= 0)){
		printf("%d", A[m - 1]);
	}
	if( (A[m - 1] >= 0 && A[0] <=0) ){int b = abs(A[0]);
		
		if(b > A[m - 1]){printf("%d", A[0]);}}
	
	return 0;}

// C: 分解偶数
// 任何大于6的偶数都可以分解成两个奇质数的和。
//输入n，输出所有解，按小的在前，大的在后输出，不要重复。
#include <stdio.h>

int main() {
	int n, i, x;//输入偶数
	scanf("%d", &n);
	int sum = 0;
	int num = 0;
    
    if(n >= 6){
	if (n % 2 != 0) { printf("ERROR"); }
	if (n % 2 == 0) {
		for (i = 3;i < n / 2;i++) {
			sum = 0;num = 0;
			if(i % 2 == 0) {
				i++;}
			if (i % 2 != 0) {
				for(x = 2;x < i;x++){
			    if(i % x != 0){sum++;}}
			    for(x = 2;x < n - i;x++){
			    if((n - i) % x != 0){num++;}
				}
				}
				if(sum == i - 2 && num == n - i - 2){
				printf("%d %d\n", i, n - i);
			}
			}
		}
}
    else
      printf("ERROR");
		return 0;
}
